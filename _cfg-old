#Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ config, pkgs, ... }:

{
  imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
      ./desktop.nix
    ];

  # boot.kernelPackages = pkgs.linuxPackages_latest;
  boot.kernelParams = [ "boot.shell_on_fail" ];

  boot.loader = {
    grub.device = "nodev";
    systemd-boot.enable = true;
  };

  networking = {
    hostName = "xps15"; # Define your hostname.
    wireless.enable = false;
    # connman.enable = true;
    networkmanager.enable = true;

  };
  # networking.networkmanager.enable = true;

  powerManagement.enable = true;

  # needed for intel wifi
  hardware.enableAllFirmware = true;

  hardware.pulseaudio.enable = true;

  nixpkgs.config = {
    allowUnfree = true;
    firefox = {
      enableGoogleTalkPlugin = true;
      enableAdobeFlash = true;
    };

    chromium = {
      enablePepperFlash = true; # Chromium's non-NSAPI alternative to Adobe Flash
      enablePepperPDF = true;
    };
   };

  # Select internationalisation properties.
  # i18n = {
  #   consoleFont = "Lat2-Terminus16";
  #   consoleKeyMap = "gb";
  #   defaultLocale = "en_GB.UTF-8";
  # };

  # Set your time zone.
  time.timeZone = "Europe/London";

  # List packages installed in system profile. To search by name, run:
  # $ nix-env -qaP | grep wget
  environment.systemPackages = with pkgs; [
    acpi
    acpid
    aspell
    aspellDicts.en
    bc
    bmon # simple bandwidth monitor and rate estimator
    bzip2
    cdparanoia
    chromium
    colordiff
    coreutils
    cpio
    cpufrequtils
    curl
    dbus
    diffstat
    diffutils
    dmenu
    docker
    dos2unix
    emacs
    evince
    firefox
    fish
    gitAndTools.gitFull
    gitAndTools.tig
    haskellPackages.ghc
    haskellPackages.xmonad
    haskellPackages.xmonad
    haskellPackages.xmonad-contrib
    haskellPackages.xmonad-extras
    htop
    iftop
    iotop
    iptables
    networkmanagerapplet
    nix-repl
    nox
    oh-my-zsh
    polkit_gnome
    pwgen
    s3cmd
    silver-searcher
    terminator
    unison
    wget
  ];

  programs.bash.enableCompletion = true;
  # List services that you want to enable:

  # Enable the OpenSSH daemon.
  # services.openssh.enable = true;

  # Open ports in the firewall.
  # networking.firewall.allowedTCPPorts = [ ... ];
  # networking.firewall.allowedUDPPorts = [ ... ];
  # Or disable the firewall altogether.
  # networking.firewall.enable = false;

  # Enable CUPS to print documents.
  services = {
    acpid = {
      enable = true;
      powerEventCommands = ''
          systemctl suspend
        '';
      lidEventCommands = ''
          systemctl hibernate
        '';
    };

    # CUPS printing
    printing = {
      enable = true;
      drivers = [ pkgs.hplipWithPlugin ];
    };

    redshift = {
       enable = true;
       latitude = "51.5072";
       longitude = "0.1275";
       temperature = {
         night = 4000;
       };
     };
    compton = {
      enable = true;
      fade = true;
    };

    locate.enable = true;
    fprintd.enable = true; # finger-print daemon and PAM module

    syncthing = {
      enable = false;
      user = "ben";
      dataDir = "/home/ben/syncthing";
    };

    apache-kafka = {
      enable = false;
      brokerId = 1;
    };

    zookeeper = {
      enable = false;
    };
  };


  fonts = {
      enableFontDir = true;
      enableGhostscriptFonts = true;
      fonts = with pkgs; [
        corefonts  # Micrsoft free fonts
        inconsolata  # monospaced
        ubuntu_font_family  # Ubuntu fonts
        source-code-pro
        font-awesome-ttf
        siji
      ];
    };
  # Define a user account. Don't forget to set a password with ‘passwd’.
  # users.extraUsers.guest = {
  #   isNormalUser = true;
  #   uid = 1000;
  # };
  users.extraUsers.ben = {
     name = "ben";
     group = "users";
     extraGroups = [ "wheel" "vboxusers" "docker" "networkmanager" ];
     home = "/home/ben";
     shell = pkgs.zsh;
   };

  virtualisation = {
     docker.enable = true;
     # virtualbox.host.enable = true;
   };
  # The NixOS release to be compatible with for stateful data such as databases.
  system.stateVersion = "18.03";

}
